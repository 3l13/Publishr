2010-11-25 # 1.3-dev

[NEW] Renamed the `contents` property as `body`.




2010-11-05 # 1.2

[NEW] Added a 'subtitle' property.

[NEW] Added the contents_view_WdMarkup, contents_list_WdMarkup and contents_home_WdMarkup
classes.

[NEW] Moved the 'homeInclude' and 'homeExclude' operations from the 'contents.news' module, and
renamed them as 'home_include' and 'home_exclude'.

[NEW] A multi-editor is now used to edit contents. The user can now choose between an RTE,
Textmark, raw and more...

[NEW] The rendered contents is now cached in the metas of the object, if it's different than the
source content. 

[CHG] An RTE is now used to edit the excerpt. Both the contents and the excerpt produce HTML,
making things a lot easier to handle. The new wd_excerpt() function does a better job too at
creating excerpt from contents.

[CHG] Altough date are stored in a datetime field, only the date is editable by the 'contents'
module. Other module, such as 'contents.articles' override the 'date' element to edit the time
too.

[FIX] The manager is created using the `contents_articles_WdManager` class.




2010-01-12 # 1.0

This module is supposed to be the base module for all _contents_ related things. By contents I
mean a extension to the system.node object with `contents`, `excerpt` and `date`. Currently the
editor used for the `contents` is saved in the `editor` field, but because this is a meta-data, 
I would like it to be independant... maybe saved in a local 'editor' database.

Because _empty_ models cannot extends other models, a 'news' model extending the 'contents' model
without adding any field to the schema cannot happen ! That's sad, in a way, but this is to stay.
Nevertheless, the *code* can be inherited ! Thus, the main purpose of this class is to provide
the logic code that is shared among _contents_ modules.

Most code is comming from from the contents.articles module, and is now available to sub classes,
such as contents.news or contents.agenda.    