2011-04-23 # 3.0-dev

[NEW] Redesigned Operation API.

[NEW] Added scopes 'similar_site' and 'smiliar_language'.




2011-02-23 # 2.8

[NEW] Repeating username in the manager are replaced by a placeholder.

[NEW] The `wdp:node:navigation` markup can be used to add a simple and usefull navigation to nodes,
with links to the next record, the previous record and to the records list. The I18n scope can
be used to translate labels to module specific strings e.g. "All records" => "All the news".

[CHG] The `wdp:node` markup only throws WdHTTPException when the markup is in a "view" view.

[DEL] Metadatas support has been removed since the "registry" module provides it for the
"system.nodes", "user.users" and "site.sites" modules.




2010-09-14 # 2.7

[NEW] The TitleSlugCombo element displays the URL of the entry.

[NEW] Two widgets for the dashboard are available : one displays statistics about contents and
resources, the other the last entries modified by the user.

[NEW] The user is prompted to confirm page changes when values of the edit block have changed.

[NEW] Metas allow custom values to be associated with nodes. The 'metas' virtual property can be
used to easily set, get and erase custom values. 

[NEW] The 'node' property of the page object is set to the node loaded using an instance of the
'node' markup if the body of the page is a view of the corresponding constructor.

[NEW] The lenght of the slug is now limited to 80 characters.

[DEL] The `url` and `absolute_url` getters as well as the `url()` and `absolute_url()` methods
are now mixed in by the 'site.pages' modules to nodes.

[FIX] 'change' event is not triggered when PopNode element is modified. 




2010-07-02 # 2.6

[NEW] Uses the new views features to build URLs.

[NEW] Added the `native` virtual property that returns the _native_ (as in "native language") node
for a node. 

[CHG] Renamed the 'absoluteUrl' method and virtual properties to 'absolute_url'.




2010-04-02 # 2.5

[NEW] For multilingual sites, a column with available translations is added to the manager. The
code used to display the information was moved from the site.pages module and is now automatically
available to all modules extending the system.nodes module.

[NEW] Locks are freed when the user disconnect.




2010-03-24 # 2.4

[NEW] The absoluteUrl() method and the absoluteUrl virtual property of the Node activerecord can be
used to get the absolute URL of a node.

[NEW] The WdTitleSlugComboElement class is used to create an element replacing both the title and
slug element.




2010-01-26 # 2.2

[CHG] The `model()` uses the constructor of the node as model name if none is defined.




2010-01-08 # 2.1

[NEW] Modules use the  wd_camelCase() function to convert their ID into a base key for the
registry. There is no longer a "system.nodes.url.view" but a "systemNodes.url.view", which is
easier to handle.

[NEW] All config blocks of system.nodes subclasses are extended with a group used to define the
'view' and 'head' URLs. The group has 'url' for identifier.

[NEW] The 'head' URL type is used to display all the entries.

[CHG] The main URL type is changed from 'primary' to 'view', since the main URL is used to view the
entry. The main URL is now referenced as the _view_ URL. 




2009-12-24 # 2.0

[NEW] The `slug` property has been added to the node object. The slug is a URL friendly version of
the node title. If the slug is not defined it is created on the fly when the property is read.

[NEW] The `user` virtual property can be used to get the user object for the node. 

[NEW] The URL system from the contents.articles modules is now integrated directly in the node
object. One can define several URL _types_, used to create URLs for various purpose e.g. author,
category, date... The primary URL, the one used to display the entry itself, has the special type
"primary".

URLs are created by passing the node object to the page object associated with the URL type. URL
types are defined on a constructor basis and saved in the registry object as
`<constructor>.url.<type>`.

[NEW] The next() and previous() method of the node object can be used to respectively get the
next and previous siblings of a node. Siblings are ordered using the `created` property. One can
override these methods to use a different ordering scheme.