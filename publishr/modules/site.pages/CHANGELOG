2011-03-24 # 2.0

[NEW] Redesigned Operation API.

[NEW] The resolve_view_target() and resolve_view_url() methods injected in the core object.

[NEW] The find_home() method of the page model.




2011-02-22 # 1.0

[NEW] Multisite support.

[NEW] Automatically select between '.php' and '.html' view files.

[NEW] In the manager, page having a pattern, a location or a view are highlighted using different
colors.

[NEW] Sitemap view.

[NEW] Rendered content of the `page:content` markup is now wrapped in a DIV element which id is
"content-<content_id>" and class is "editor-<normalized_editor_name>".

[NEW] Rendered views are wrapped in a DIV element which id is "view-<normalized_view_id>" and class
is "view <normalized_constructor> <nomalized_type>".

[NEW] The `css_class` property is made of "page-id-<page_nid> page-slug-<page_slug>" +
(if the page is the home page) "home" + (if the page displays a node)
"node-id-<node_nid> node-slug-<node_slug>" + (if the user is authenticated) "is_authenticated".

[NEW] Template can now be changed and updated within the editor dynamically.

[NEW] A record page cannot be deleted it has children or is a location target.

[NEW] The `scope` property can be used in the view definition to provide a I18n scope while
rendering templates. If the property is not defined, the flat module id of the view is used
instead. 

[CHG] Renamed the `contentsid` and `contents` property of the "contents" active record as
`contentid` and `content`. Renamed the `page:contents` markup as `page:content`.

[CHG] Enhanced the process of rendering page content so that when exceptions are thrown, they can
be used as rendered content.

[FIX] The scope of the view_WdEditor::render() function can be compromised by PHP templates.




2010-09-28 # 0.11

[NEW] Using the new features of the FObject class, the 'site.pages' module add the `url` and
`absolute_url` getters as well as the `url()` and `absolute_url()` methods to nodes.

[NEW] The `page:languages` offers an alternative to the `page:translation` markup.

[NEW] Added the `from-level` attribute to the `navigation` markup.

[NEW] Added SEO features such as 'document title' and 'document description'.

[NEW] The `navigation` markup now fires the 'alter.markup.navigation' allowing listeners to modify
the output of the markup. 

[NEW] A page content can now be override as a string, we no longer have to create a false content
object.

[NEW] When the content is converted into a string, external anchors are modified to include the
"target" attribute with the "_blank" value.

[CHG] The 'view' editor is now much nicer.

[DEL] Removed the 'page:tracker' markup which has been replaced with an automated solution from
the 'site.firstposition' module.

[FIX] site_pages_WdModel::loadByPath() is confused by '/' used in regex.




2010-07-09 # 0.10

[NEW] The new WdAdjustTemplateElement class can be used to create element to adgust the
template of an object. It's currently only practical with pages, but who knows...

[NEW] The new collectTemplateContents() module method can now be used to collect editable contents
(page:contents) of a template, including editable contents of all its partials.

[NEW] Template is now inherited, except when the parent is a home page in which case the template
is 'page.html'. In order to maintain a clean inheritance, the template is discarted when editing a
page if the template is inherited, or if the template is 'page.html' and the parent is a home page.

[NEW] The `page:traker` markup does not add a tracker if the 'localhost' string is found in the
host name.

[CHG] Renamed configurable node URL 'head' as 'list'.

[CHG] Renamed page object virtual property 'is_index' as 'is_home'.

[DEL] Removed the getLayouts() methods deprecated by the new WdAdjustTemplateElement class.

[CHG] Pages' labels are used instead of their titles to create the breadcrumb.

[CHG] A '<strong>' is used instead of a '<span class="current">' to mark the current page of the
breadcrumb. 

[CHG] Renamed camelcase properties to lowercase underscore separated properties.

[FIX] The `breadcrumb` markup missed the home link a non multilingual sites.




2010-04-27 # 0.8

[NEW] Rewrote the module's find() method into the model's loadByPath() method.  

[NEW] the sites_pages::loadAllNested() method can be used to load nested nodes.

[NEW] The `urlVariables` property is used where available to compose pages URL.

[CHG] sites_pages::loadAll() returns an array instead of a statement.

[CHG] Renamed the `level` virtual property of the Page active record to `depth`. 

[CHG] Renamed `url_vars` and `url_local` as `urlVariables`, `localUrl`.

[DEL] Removed `url_local_vars`, just use `url_vars`.

TODO: SURE ? BECAUSE NOW WE COULD [CHG]
The URL is no longer computed during the find() method. Since the parents are already loaded
defering the URL composition to the Page active object seams the better solution.

[FIX] URL variables where not propagated if the page didn't have a pattern.




2010-03-30 # 0.6

[NEW] The extension of the template used for the page is now used to generate URL. The extension is
appended to the generated URL if the page has no child.

[CHG] The entire filename (as in "with its extension") of the template is now saved, making the
retrieving of the extension much easier. 




2010-02-17 # 0.4

[NEW] The `site.pages.url.change` event is triggered when a page's URL is changed during the
save operation.

TODO: Trigger the event during the updateTree operation too. 




2010-02-01 # 0.3

[DEL] The _bind_ feature, which was used to bind a content to a file is deprecated. The _views_
editor has replaced it. They didn't serve the same purpose, but the bind feature was used in that
way anyway.
 



2009-11-12 # 0.2

[CHG] The 'match' and 'captured' variables available in the page object when the page is retrieved
using the find() method have been renamed to 'url_local' and 'url_vars'.

[NEW] Two new properties are available in the page object retrieved using the find() method, namely
`url` and `url_local_vars`. The `url` property contains the whole URL to the page, and the
`url_local_vars` property contains the variables extracted using the pattern of the page.