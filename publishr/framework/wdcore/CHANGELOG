2010-12-26 # 0.9.0-dev

[NEW] Events are now defined in the "events" namespace of the "hooks" config.

[NEW] The "<flat_module_id>_WdHook" class is added to the autoload classes if the file "hooks.php"
is found in the root of a module directory.

[NEW] In order to standardize the event handling, the 'target' property is now used to associate an
event with an object.

[NEW] The "{self_and_related}" SQL statement placeholder can be used in select statements to query
a table and all of its related tables.

[NEW] Added the `db` getter for the "primary" database connection.

[NEW] The 'Referer' HTTP header is set when the operation result location is changed.

[NEW] The new WdActiveRecordQuery class is now used troughout the framework to compose SQL queries.

[NEW] Instances of WdObject can now define what we call "volatile getters", getters that return
values but don't set properties.

[NEW] Hypens in operations name are converted to underscores for RESTful operations.

[NEW] WdFileCache: the T_MODIFIED_TIME tag specifies the time at which assets where modified. This
time is used to keep the cache up to date.

[NEW] The WdModel class implements the ArrayAccess interface.

[NEW] Route segments can now be defined as ':identifier' e.g. ':slug' instead of '<slug:[^/]+>'. 

[CHG] When defined as an array, the `scope` option is now cascading, a translation is searched in
the different scopes : array('users', 'delete', 'operation') can be used to search for a
translation in the 'users.delete.operation', 'delete.operaton' and 'operation' namespaces.

[CHG] PERMISSION_+ Permissions are now const of the WdModule class.

[CHG] Renamed the WdLocale class as WdI18n.

[CHG] Renamed WdCore::getModule as "module", WdCore::readModules as "index_modules".

[CHG] Moved to 'cache catalogs' config options from 'i18n' to 'core'.

[DEL] WdObject: The `__get_them_all` method is deprecated, override the `__defer_get` method
instead.

[DEL] WdDatabase::count(), WdDatabase::loadRange(), WdDatabase::loadAll() are deprecated in favor
of ActiveRecordQuery. WdDatabase::load() is deprecated in favor of WdModule::find().




2010-11-08 # 0.8.0

[NEW] Hooks can now be used to add methods (and getters) to instances of the FObject class.

[NEW] The wd_array_insert() function can be used to insert values after or before a specified key.

[NEW] The ".json" or ".xml" extensions can be appened to RESTful operations URL for a response in
"application/json" or "application/xml" format.

[NEW] WdModule: The 'control_operation' callback now throws WdHTTPException exceptions when control
fail on CONTROL_AUTHENTICATION, CONTROL_PERMISSION, CONTROL_ENTRY and CONTROL_OWNERSHIP.

[NEW] Because isset() or get_object_vars() don't work with virtual properties, the `has_property`
of the FObject class can be used to know if an object has a property even if the property is NULL.

[NEW] The configuration system has been rewrote :

The configuration process is now handled through the WdConfig class instead of the WdCore class.

The 'autoconfig' feature is now deprecated. Classes can use the `__static_construct()` method to
read configuration on loading.

In order to be able to use the `__static_construct()` method, which is only called by the WdCore's
autoloader, the WdLocale, WdDebug and WdException classes are no longer loaded by the WdCore
include file, thus, they can only be available *after* the `__construct()` method returns.

[NEW] Module models can now use models from other modules, finally introducing a form of model
inheritance, or at least reusing. Instead of defining the tags to create the model to use, one can
provide the name of another module's model e.g. 'contents/primary', or use the keywork 'inherit'
that will try to find a model matching the module's parent class.

[NEW] Extended tables are now updated in a single operation.

[NEW] WdEvent: events are now configured in the 'events' namespace instead of the 'event'
namespace. Event definitition have changed from a simple callback to a definition made of the
callback as index 0 and options. Currently, the 'instanceof' option can be used to filter targets
for which the callback is actually called when the event is triggered.

[CHG] The CONTROL_AUTHENTICATED control as been renamed as CONTROL_AUTHENTICATION.

[CHG] The operation control and validation process has been refined :

The 'controlOperation' has been renamed as 'handle_operation_control'. The 'controlForm' method has
been removed. The getOperationAccessControl() method has been broken into callbacks. The control
callbacks have been renamed from 'control_<type>' to 'control_operation_<type>'. The operation
specific callbacks are now defined as 'control_operation_<operation_name>_<type>'.

As an example, the following methods are called when the 'save' operation is processed :

	handle_operation
	handle_operation_control
	
	get_operation_save_controls || get_operation_controls
	
	control_operation_save || control_operation
	control_operation_save_authentication || control_operation_authentication
	control_operation_save_form || control_operation_form
	
	validate_operation_save || validate_operation
	
[CHG] The CONTROL_AUTHENTICATION and CONTROL_ENTRY are added when the CONTROL_OWNERSHIP is defined.
The controls are added only if they are not already defined. 

[CHG] The URL base used to issue RESTful operation is now "/api/" instead of "/do/".

[REM] The user object will no longer be added as a member of the operation object during operation
controls. 

[REM] The application object is gone, everything goes through the core object now.

[FIX] WdDebug messages are not restored.




2010-07-08 # 0.7.16

[NEW] WdModel: The active record class is now inherited from the parent model.

[NEW] WdModule: Added getters support.

[NEW] WdModule: Added 'model' getter.

[NEW] WdHook: Callback can now be objects defined as 'o:<object_class>'.

[NEW] The path to the config origin is now used as a key for each configs.

[NEW] The autoloader now executes the `__static_construct()` method where available. This feature
should be used to replace the former autoconfig process.

[NEW] WdActiveRecord: One can implement the `__get_them_all` method to create a general fallback
for the `__get` method.

[NEW] Added RESTful support for operations.

[NEW] Operations can now be defined using routes.

[NEW] Added the WdApplicationSession class for lazy session creation using the `session` virtual
property of the application object. The session is now started on demand.

[NEW] Models can now be directly loaded using the core object. 

[CHG] WdHook: Hook's callback is not longer called with a clone of the hook as first parameter.
The arguments passed to the call() method are passed as is to the hook's callback.

[CHG] The WdOperation::dispatch() method now returns the result of the operation.

[CHG] The classes autoconfig() method now receive an array of configs instead of a variable number
of arguments.




2010-04-25 # 0.7.14

[NEW] The WdHook class has been completely rewrote.

[NEW] WdImage: Unless the user provided a callback, the background of resized images is now filled
with a transparent color, preserving the transparency of resized images.

[NEW] The WdCore::getConstructedConfig() static method can be used to get a constructed config. If
the constructed config doesn't exists yet, the provided constructor is called with all the pending
configs. The resulting constructed config is then returned. The constructed config is stored if
'cache configs' is set to true in the `core` config.

For most classes, this system might be a better solution then the `autoconfig` one.  

[NEW] WdFileCache: When available, APC is used to cache data.

[CHG] WdFileCache: The order of the arguments for the constructor of the load() method have changed
form 'cache, file, userdata' to 'userdata, cache, file'. 

[FIX] WdException: The HTTP code is no longer set in the header during the __construct but when the
the exception is stringified.




2010-03-25 # 0.7.13

[NEW] WdDatabaseTable: Smart aliases are now used during SQL queries. Instead of the puzzling `t1`
or `t2`, the aliases are now created using the table's name. e.g. the alias for the `system_nodes`
table would be `node` and the alias for a `categories` table would be `category`.

[NEW] WdOperation: The `method` property can now be used to known which method was used for the 
operation (GET / POST). The `terminus` property is set to TRUE for GET method operations.